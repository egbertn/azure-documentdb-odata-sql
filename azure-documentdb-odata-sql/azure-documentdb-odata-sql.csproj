<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk" ToolsVersion="15.0">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{D59035E3-C274-4CFF-B835-F79D4FC0411C}</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>Microsoft.Azure.Documents.OData.Sql</RootNamespace>
    <AssemblyName>Microsoft.Azure.Documents.OData.Sql</AssemblyName>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <PackageId>ADCCure.Azure.Documents.OData.Sql</PackageId>
    <Version>3.0</Version>
    <Description>Currently it supports below query mappings:
  primitive:
    field                       =&gt; c.field
    parent/child                =&gt; c.parent.child
    Namespace.EnumType'enumVal' =&gt; 'enumVal'
          
  queries:
    $select  =&gt; SELECT
    $filter  =&gt; WHERE
    $top     =&gt; TOP
    $orderby =&gt; ORDER BY
          
  functions:
    Items/any(a: a/field op 'value') =&gt; SELECT value c FROM c JOIN a IN c.Items WHERE a.field op 'value'
    contains(field,'value')     =&gt; CONTAINS(c.field,'value')
    startswith(field,'value')   =&gt; STARTSWITH(c.field,'value')
    endswith(field,'value')     =&gt; ENDSWITH(c.field,'value')
    toupper(field)              =&gt; UPPER(c.field)
    tolower(field)              =&gt; LOWER(c.field)
    length(field)               =&gt; LENGTH(c.field)
    indexof(field,'value')      =&gt; INDEX_OF(c.field,'value')
    substring(field,idx1,idx2)  =&gt; SUBSTRING(c.field,idx1,idx2)
    trim(field)                 =&gt; LTRIM(RTRIM(c.englishName))
    concat(field,'value')       =&gt; CONCAT(c.englishName,'value')</Description>
    <Company>ADC Cure</Company>
    <Authors>Ziyou Zheng, Egbert Nierop</Authors>
    <PackageReleaseNotes>3.0 .NET Core beta. 
2.1.12 Fix Guid translation with quotes encapsulated
2.1.11 Resolve nullreference exception on empty $filter
2.1.5 Improved Enum parsing
2.1.4 Improved dependency versions
2.1.3 Added support for any. Note, 'all' not supported.
2.0.2 Added support for functions: length(), indexof(), substring(), trim(), concat()
2.0.1 Added support for functions: contains(), startswith(), endswith(), toupper() and tolower()
2.0.0 Breaking changes: Simplified usage with newly introuduced class ODataToSqlTranslator
1.0.0 Initial release</PackageReleaseNotes>
    <PackageTags>odata documentdb sql translate convert core</PackageTags>
    <Copyright>MIT</Copyright>
    <PackageProjectUrl>https://github.com/egbertn/azure-documentdb-odata-sql</PackageProjectUrl>
    <RepositoryUrl>https://github.com/egbertn/azure-documentdb-odata-sql</RepositoryUrl>

  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Release\Microsoft.Azure.Documents.OData.Sql.XML</DocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <Compile Remove="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.OData" Version="7.0.0-beta1" />
    <PackageReference Include="Microsoft.Azure.DocumentDB.Core" Version="1.8.1" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Properties\" />
  </ItemGroup>




</Project>